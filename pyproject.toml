[tool.poetry]
name = "abbanoa-water-infrastructure"
version = "1.2.3.9"
description = "Water infrastructure monitoring and analysis system using Domain-Driven Design"
authors = ["Alessio Rocchi <rocchi.b.a@gmail.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
pandas = "^2.0.0"
numpy = "^1.24.0"
google-cloud-bigquery = "^3.11.0"
streamlit = "^1.28.0"
plotly = "^5.18.0"
seaborn = "^0.12.0"
matplotlib = "^3.7.0"
prophet = "^1.1.5"
python-dotenv = "^1.0.0"
pydantic = "^2.5.0"
dependency-injector = "^4.41.0"
structlog = "^23.2.0"
pytz = "^2023.3"
tqdm = "^4.67.1"
db-dtypes = "^1.4.3"
redis = "^5.0.0"
asyncpg = "^0.29.0"
apscheduler = "^3.10.0"
schedule = "^1.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-asyncio = "^0.21.0"
factory-boy = "^3.3.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
pylint = "^3.0.0"
pre-commit = "^3.5.0"
sphinx = "^7.2.0"
sphinx-rtd-theme = "^2.0.0"
bandit = "^1.7.5"
safety = "^3.0.0"
coverage = "^7.3.0"
types-python-dateutil = "^2.8.0"
types-pytz = "^2023.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true
skip = [".venv", "venv", ".tox", "dist", "build", ".eggs"]

[tool.mypy]
python_version = "1.2.2.0"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
namespace_packages = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true

[tool.pylint]
max-line-length = 88
disable = [
    "C0103", # Invalid name
    "C0114", # Missing module docstring
    "C0115", # Missing class docstring
    "C0116", # Missing function docstring
    "R0903", # Too few public methods
    "R0913", # Too many arguments
    "W0212", # Access to a protected member
]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "db"]

[tool.pytest.ini_options]
minversion = "1.2.2.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
targets = ["src"]
skip = ["B101", "B601"]
