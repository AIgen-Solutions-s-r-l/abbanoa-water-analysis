version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: abbanoa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --appendfsync everysec
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  cache-initializer:
    build:
      context: .
      dockerfile: Dockerfile.cache
    container_name: abbanoa-cache-init
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/gcp-key.json
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_TTL_HOURS=24
      - CACHE_REFRESH_HOURS=6
    volumes:
      - ./credentials:/app/credentials:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: python -m src.infrastructure.cache.cache_initializer

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: abbanoa-dashboard
    ports:
      - "8501:8501"
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/gcp-key.json
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./credentials:/app/credentials:ro
    depends_on:
      redis:
        condition: service_healthy
      cache-initializer:
        condition: service_started
    restart: unless-stopped
    command: streamlit run src/presentation/streamlit/app.py --server.port=8501 --server.address=0.0.0.0

volumes:
  redis-data: